.ShowMainShop DOTAShopItemCombines
{
	background-image: url("s2r://panorama/images/hud/reborn/bg_item_breakdown_recessed_psd.vtex");
    background-size: cover;
    padding-top: 6px;
    padding-bottom: 6px;
}

DOTAShopItemCombines DOTAShopItem
{
	box-shadow: fill 1px 1px 24px #000a;
}

#ConnectorsContainer, #ItemsContainer
{
	width: 100%;
	height: 100%;
	overflow: clip;
}

DOTAGameItemsPage DOTAShopItem
{
	background-color: black;
}

DOTAShopItem 
{
	width: 66px;
	height: 44px;
	height: width-percentage( 72.7% );

	 /* start at non-zero, so that it animates into view but the first frame measures its size correctly */
	opacity: 0.01;

	transition-property: opacity, brightness, position;
	transition-duration: 0.2s;
}

DOTAShopItem:hover
{
	brightness: 2.0;
}
DOTAShopItem:active
{
	brightness: 1.5;
}

DOTAShopItem.Visible
{
	opacity: 1.0;
}

DOTAShopItem.Destroying
{
	opacity: 0.0;
}

.Connector
{
	width: 10px; /* overwritten by code */
	height: 3px;

	background-color: rgba(255, 255, 255, 0.05);
	border-radius: 1px;
	transform-origin: 0% 50%;
	box-shadow: 0px 0px 6px black;
	//background-image: url("s2r://panorama/images/hud/connector_highlight_psd.vtex");
	background-size: 100%;

	 /* start at non-zero, so that it animates into view but the first frame measures its size correctly */
	opacity: 0.01;

	transition-property: opacity, position, width, transform;
	transition-duration: 0.2s;
}

@define GoldPoint: rgb(255, 215, 0);
@define RedPoint: rgb(229, 25, 23);
@define Nothing: rgba(255, 255, 255, 0.2);
@define Middle: rgba(255, 255, 255, 0.05);
@define FirstStop: 0.45;
@define SecondStop: 0.55;

.Connector.NothingtoNothing { background-color: gradient( linear, 0% 0%, 100% 0%, from( Middle ), color-stop( FirstStop, Middle ), color-stop( SecondStop, Middle ), to(Nothing ) ); } 
.Connector.NothingtoGold { background-color: gradient( linear, 0% 0%, 100% 0%, from( Middle  ), color-stop( FirstStop,Middle ), color-stop( SecondStop, Middle ), to(GoldPoint ) ); } 
.Connector.RedtoNothing { background-color: gradient( linear, 0% 0%, 100% 0%, from( RedPoint  ), color-stop( FirstStop, Middle ), color-stop( SecondStop,Middle ), to(Nothing ) ); } 
.Connector.NothingtoRed { background-color: gradient( linear, 0% 0%, 100% 0%, from( Nothing  ), color-stop( FirstStop, Middle ), color-stop( SecondStop,Middle ), to(RedPoint ) ); } 
.Connector.RedtoGold { background-color: gradient( linear, 0% 0%, 100% 0%, from( RedPoint ), color-stop( FirstStop,Middle ), color-stop( SecondStop, Middle ), to(GoldPoint ) ); } 
.Connector.GoldtoRed { background-color: gradient( linear, 0% 0%, 100% 0%, from( GoldPoint ), color-stop( FirstStop, Middle ), color-stop( SecondStop,Middle ), to(RedPoint ) ); } 
.Connector.GoldtoNothing { background-color: gradient( linear, 0% 0%, 100% 0%, from( GoldPoint  ), color-stop( FirstStop,Middle ), color-stop( SecondStop, Middle ), to(Nothing ) ); } 
.Connector.GoldtoGold { background-color: gradient( linear, 0% 0%, 100% 0%, from( GoldPoint  ), color-stop( FirstStop, Middle ), color-stop( SecondStop, Middle ), to(GoldPoint ) ); } 


/* little bit buggy below in small cases, but not enough to be obvious */
.Connector.GoldtoNothing.VerticalConnector { background-color: gradient( linear, 30% 0%, 100% 0%, from( GoldPoint  ), color-stop( FirstStop,Middle ), color-stop( SecondStop, Middle ), to( Nothing ) ); } 
.Connector.GoldtoGold.VerticalConnector { background-color: gradient( linear, 30% 0%, 100% 0%, from( GoldPoint  ), color-stop( FirstStop, GoldPoint ), color-stop( SecondStop, GoldPoint ), to( GoldPoint ) ); } 
.Connector.GoldtoRed.VerticalConnector { background-color: gradient( linear, 30% 0%, 100% 0%, from( GoldPoint  ), color-stop( FirstStop, RedPoint ), color-stop( SecondStop, GoldPoint ), to( GoldPoint ) ); } 
.Connector.RedtoGold.VerticalConnector { background-color: gradient( linear, 30% 0%, 100% 0%, from( RedPoint  ), color-stop( FirstStop, RedPoint ), color-stop( SecondStop, GoldPoint ), to( GoldPoint ) ); } 
.Connector.RedtoNothing.VerticalConnector { background-color: gradient( linear, 30% 0%, 100% 0%, from( RedPoint  ), color-stop( FirstStop, RedPoint ), color-stop( SecondStop, Middle ), to( Nothing ) ); } 
.Connector.NothingtoRed.VerticalConnector { background-color: gradient( linear, 30% 0%, 100% 0%, from( RedPoint  ), color-stop( FirstStop, RedPoint ), color-stop( SecondStop, Middle ), to( Nothing ) ); } 
.Connector.NothingtoGold.VerticalConnector { background-color: gradient( linear, 30% 0%, 100% 0%, from( GoldPoint  ), color-stop( FirstStop, Middle ), color-stop( SecondStop, Middle ), to( Middle ) ); } 

.Connector.Visible
{
	opacity: 1.0;
}

.Connector.Destroying
{
	opacity: 0.0;
}

// -----------------------------
// Shop

DOTAHUDShop DOTAShopItem
{
	width: 40px;
	height: width-percentage( 72.7% );
}
